# Index Files Guidelines

## General Rule

- **Avoid creating index.ts files that only re-export modules**
- Use direct imports instead of barrel exports
- Only create index files when they provide additional value

## When to Use Index Files

- **API endpoints** that need to be grouped
- **Utility libraries** with multiple related functions
- **Component libraries** that need a single entry point
- **Type definitions** that are closely related

## Examples

### ✅ Good Examples

```typescript
// Direct imports - preferred
import { createUserAction } from '@/lib/db/user/user.actions';
import { UserProfileCard } from '@/components/user-profile-card';

// Index file with additional logic
// src/lib/db/index.ts
export { createUserAction } from './user/user.actions';
export { createTeamAction } from './team/team.actions';
export { createOrgAction } from './organisation/organisation.actions';

// Add shared database utilities
export const dbUtils = {
	validateId: (id: string) => /^[a-zA-Z0-9-]+$/.test(id),
	sanitizeInput: (input: string) => input.trim(),
};
```

### ❌ Bad Examples

```typescript
// Unnecessary index file - just re-exporting
// src/components/index.ts
export { UserProfileCard } from './user-profile-card';
export { TeamList } from './team-list';
export { OrganisationCard } from './organisation-card';

// Better: direct imports
import { UserProfileCard } from '@/components/user-profile-card';
import { TeamList } from '@/components/team-list';
import { OrganisationCard } from '@/components/organisation-card';
```

globs:
alwaysApply: true

---
